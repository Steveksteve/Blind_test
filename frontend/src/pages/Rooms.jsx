import React, { useState, useEffect } from "react";
import { Link } from "react-router-dom";
import axios from "axios";
import "../style/Rooms.css";

function Rooms() {
  const [rooms, setRooms] = useState([]);

  // üìå Fonction pour r√©cup√©rer les rooms
  const fetchRooms = () => {
    axios.get("http://127.0.0.1:8080/api/rooms")
      .then((response) => {
        console.log("üîç Rooms r√©cup√©r√©es :", response.data.rooms);
        setRooms(response.data.rooms); 
      })
      .catch((error) => console.error("‚ùå Erreur lors de la r√©cup√©ration des rooms :", error));
  };

  useEffect(() => {
    fetchRooms(); // üîÑ Charge les rooms au d√©marrage
  }, []);

  // üìå Cr√©ation d'une Room
  const createRoom = async () => {
    const roomName = prompt("Entrez le nom de la nouvelle room :");
    if (!roomName) return;

    try {
      const response = await axios.post("http://127.0.0.1:8080/api/rooms", { name: roomName });
      console.log("‚úÖ Room cr√©√©e :", response.data);
      fetchRooms(); // üîÑ Recharge les rooms apr√®s cr√©ation
    } catch (error) {
      console.error("‚ùå Erreur lors de la cr√©ation de la room :", error);
      alert("‚ö†Ô∏è Le nom de la room existe d√©j√† ou autre probl√®me.");
    }
  };

  return (
    <div className="rooms-container">
      <h1 className="rooms-title">üé≠ Choisis une Room</h1>

      <div className="rooms-buttons">
        {rooms.length > 0 ? (
          rooms.map((room) => (
            <Link key={room.id} to={`/room/${room.id}`} className="room-button">
              {room.name} ({room.players} joueurs)
            </Link>
          ))
        ) : (
          <p className="no-room">Aucune room disponible.</p>
        )}
      </div>

      <button className="create-room" onClick={createRoom}>‚ûï Cr√©er une Room</button>
    </div>
  );
}

export default Rooms;
